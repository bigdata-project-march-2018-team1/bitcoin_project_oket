from kafka import KafkaProducer
import json
from websocket import create_connection
import datetime

WEBSOCKET_URL = "ws://ws.blockchain.info/inv"
WEBSOCKET_REQUEST = json.dumps({"op":"blocks_sub"})

#DEFAULT_HOST = "blockchain.info"
#URI_BLOCKS = "/fr/blocks/"
#URI_TRANSACTIONS = "/fr/rawblock/"

def produce_Tx_Index(topic):
    """  Get the current information of transaction by creating a connection to "ws://ws.blockchain.info/inv" and seed it to Kafka.

    Arguments:
        topic {string} -- Name of topic to Produce in Kafka

    Returns:
        Void -- Server
    """
    producer = KafkaProducer(acks=1,max_request_size=10000000,value_serializer=lambda m: json.dumps(m).encode('ascii'))
    ws = create_connection(WEBSOCKET_URL)

    while True:
        print("Try to send ...")
        ws.send(WEBSOCKET_REQUEST)
        tx=ws.recv()
        print(type(tx))
        print(tx)
        producer.send(topic,tx)
        print("Send Mineur Data ...")
        print(datetime.datetime.now())
        
if __name__ == "__main__":
    produce_Tx_Index("mineur_str")



"""
(None, '{\n  "op" : "block",\n  "x" : {\n    "txIndexes" : [ 340075123, 340074313, 340072861, 340074500, 340073195, 340073991, 340074254, 340074417, 340073002, 340074543, 340072897, 340073304, 340072319, 340074290, 340074172, 340074171, 340072635, 340073851, 340073901, 340072557, 340074376, 340073852, 340072702, 340074249, 340074859, 340073171, 340074123, 340071782, 340073193, 340072261, 340072291, 340072748, 340072745, 340074627, 340072873, 340072413, 340074089, 340073417, 340073412, 340073421, 340074087, 340074852, 340071780, 340074059, 340072773, 340072180, 340073174, 340072596, 340072599, 340073246, 340074676, 340072780, 340072275, 340072507, 340072511, 340072483, 340072496, 340072516, 340075124, 340072480, 340072498, 340072477, 340072484, 340073203, 340073892, 340074938, 340073172, 340072399, 340072263, 340072478, 340073869, 340073012, 340074220, 340074458, 340074845, 340072818, 340074273, 340072367, 340075037, 340075026, 340072274, 340074698, 340071778, 340074139, 340072841, 340072502, 340072559, 340072602, 340073883, 340073912, 340073386, 340072939, 340072964, 340074044, 340073009, 340075035, 340075049, 340072597, 340073048, 340074995, 340074045, 340074820, 340072963, 340074659, 340074533, 340072952, 340075125, 340074380, 340072840, 340074792, 340074355, 340074232, 340072668, 340072910, 340072975, 340072415, 340072318, 340074999, 340072196, 340074150, 340074940, 340072848, 340072821, 340074353, 340074884, 340074234, 340074569, 340073328, 340073169, 340073990, 340074453, 340072370, 340073149, 340073940, 340072406, 340075008, 340072709, 340072283, 340074299, 340072619, 340074084, 340073041, 340072404, 340074185, 340074201, 340074523, 340074882, 340074519, 340072767, 340073189, 340074817, 340072493, 340072580, 340074673, 340073182, 340073242, 340072410, 340071757, 340074520, 340072615, 340074493, 340074655, 340074869, 340073050, 340073898, 340072943, 340073124, 340072627, 340074528, 340072353, 340073913, 340074160, 340073239, 340074508, 340072363, 340072303, 340074287, 340074293, 340072993, 340074264, 340074796, 340072962, 340073196, 340071771, 340072986, 340073411, 340072977, 340074899, 340074941, 340073973, 340074390, 340074364, 340072789, 340072535, 340072312, 340074916, 340073958, 340072684, 340073403, 340073268, 340074339, 340072648, 340073228, 340072425, 340073082, 340072984, 340074527, 340072795, 340072747, 340074000, 340074119, 340074014, 340072954, 340074101, 340073972, 340073010, 340074304, 340072942, 340074024, 340074174, 340073122, 340074373, 340072777, 340074127, 340074040, 340073064, 340072613, 340073858, 340072452, 340072950, 340074562, 340073259, 340073391, 340072945, 340074262, 340072266, 340073160, 340073839, 340074705, 340073935, 340074906, 340072892, 340074920, 340074239, 340074191, 340074138, 340074489, 340074732, 340074746, 340074070, 340072195, 340074169, 340074990, 340074849, 340073359, 340072650, 340074744, 340074259, 340072372, 3400
"""
